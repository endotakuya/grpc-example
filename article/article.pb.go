// Code generated by protoc-gen-go. DO NOT EDIT.
// source: article/article.proto

package article

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Article_Status int32

const (
	Article_DRAFT   Article_Status = 0
	Article_PUBLISH Article_Status = 1
)

var Article_Status_name = map[int32]string{
	0: "DRAFT",
	1: "PUBLISH",
}

var Article_Status_value = map[string]int32{
	"DRAFT":   0,
	"PUBLISH": 1,
}

func (x Article_Status) String() string {
	return proto.EnumName(Article_Status_name, int32(x))
}

func (Article_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_12321969c539ac1b, []int{1, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_12321969c539ac1b, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Article struct {
	Id                   int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string         `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string         `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Status               Article_Status `protobuf:"varint,4,opt,name=status,proto3,enum=article.Article_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_12321969c539ac1b, []int{1}
}

func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Article) GetStatus() Article_Status {
	if m != nil {
		return m.Status
	}
	return Article_DRAFT
}

func init() {
	proto.RegisterEnum("article.Article_Status", Article_Status_name, Article_Status_value)
	proto.RegisterType((*Empty)(nil), "article.Empty")
	proto.RegisterType((*Article)(nil), "article.Article")
}

func init() { proto.RegisterFile("article/article.proto", fileDescriptor_12321969c539ac1b) }

var fileDescriptor_12321969c539ac1b = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x37, 0x6b, 0xb3, 0xa1, 0x23, 0x2c, 0xcb, 0xa0, 0x18, 0x7a, 0x0a, 0x39, 0x2d, 0x0a,
	0x5b, 0xa8, 0x4f, 0x50, 0xd1, 0xa2, 0xe0, 0xa1, 0x64, 0xf5, 0x01, 0xea, 0x36, 0x87, 0x40, 0x6d,
	0x4a, 0x32, 0x0a, 0xbe, 0x8b, 0x0f, 0x2b, 0x64, 0x53, 0x0f, 0xed, 0x29, 0xfc, 0xff, 0x9f, 0x7f,
	0x3e, 0x66, 0xe0, 0x7a, 0x13, 0xc8, 0x0d, 0x3b, 0x3b, 0xcf, 0x6f, 0x77, 0x08, 0x9e, 0x3c, 0x8a,
	0x2c, 0xb5, 0x00, 0xfe, 0xf4, 0x79, 0xa0, 0x1f, 0xfd, 0xcb, 0x40, 0x2c, 0x47, 0x13, 0x6b, 0x28,
	0xdd, 0x56, 0x32, 0xc5, 0x5a, 0x6e, 0x4a, 0xb7, 0xc5, 0x2b, 0xe0, 0xe4, 0x68, 0x67, 0x65, 0xa9,
	0x58, 0x3b, 0x35, 0xa3, 0x40, 0x09, 0x62, 0xf0, 0x7b, 0xb2, 0x7b, 0x92, 0x17, 0xc9, 0x3f, 0x4a,
	0x9c, 0x43, 0x15, 0x69, 0x43, 0x5f, 0x51, 0x4e, 0x14, 0x6b, 0xeb, 0xc5, 0x4d, 0x77, 0xa4, 0x67,
	0x42, 0xd7, 0xa7, 0xd8, 0xe4, 0x6f, 0x5a, 0x41, 0x35, 0x3a, 0x38, 0x05, 0xfe, 0x68, 0x96, 0xab,
	0xb7, 0xa6, 0xc0, 0x4b, 0x10, 0xeb, 0xf7, 0x87, 0xd7, 0x97, 0xfe, 0xb9, 0x61, 0x0b, 0x07, 0x75,
	0xee, 0xf6, 0x36, 0x7c, 0xbb, 0xc1, 0xe2, 0x1d, 0xf0, 0x95, 0x0b, 0x91, 0xb0, 0xfe, 0x9f, 0x9e,
	0x36, 0x99, 0x35, 0xa7, 0x34, 0x5d, 0xe0, 0x2d, 0x4c, 0xd6, 0x3e, 0x12, 0x9e, 0x65, 0xb3, 0x93,
	0xb6, 0x2e, 0x3e, 0xaa, 0x74, 0xa2, 0xfb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x72, 0x7b,
	0x15, 0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArticleServiceClient is the client API for ArticleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArticleServiceClient interface {
	First(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Article, error)
	Post(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Empty, error)
}

type articleServiceClient struct {
	cc *grpc.ClientConn
}

func NewArticleServiceClient(cc *grpc.ClientConn) ArticleServiceClient {
	return &articleServiceClient{cc}
}

func (c *articleServiceClient) First(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Article, error) {
	out := new(Article)
	err := c.cc.Invoke(ctx, "/article.ArticleService/First", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articleServiceClient) Post(ctx context.Context, in *Article, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/article.ArticleService/Post", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticleServiceServer is the server API for ArticleService service.
type ArticleServiceServer interface {
	First(context.Context, *Empty) (*Article, error)
	Post(context.Context, *Article) (*Empty, error)
}

func RegisterArticleServiceServer(s *grpc.Server, srv ArticleServiceServer) {
	s.RegisterService(&_ArticleService_serviceDesc, srv)
}

func _ArticleService_First_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).First(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article.ArticleService/First",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).First(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticleService_Post_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Article)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticleServiceServer).Post(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/article.ArticleService/Post",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticleServiceServer).Post(ctx, req.(*Article))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArticleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "article.ArticleService",
	HandlerType: (*ArticleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "First",
			Handler:    _ArticleService_First_Handler,
		},
		{
			MethodName: "Post",
			Handler:    _ArticleService_Post_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "article/article.proto",
}
